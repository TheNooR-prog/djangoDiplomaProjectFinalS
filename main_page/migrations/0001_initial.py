# Generated by Django 4.1.6 on 2023-02-03 09:53

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import main_page.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='About',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('header', models.TextField(max_length=400)),
                ('first_fact', models.TextField(max_length=200)),
                ('second_fact', models.TextField(max_length=200)),
                ('third_fact', models.TextField(max_length=200)),
                ('footer', models.TextField(max_length=400)),
                ('video_link', models.URLField()),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=50, unique=True)),
                ('position', models.SmallIntegerField(unique=True)),
                ('is_visible', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ('position',),
            },
        ),
        migrations.CreateModel(
            name='Chef',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=25)),
                ('occupation', models.CharField(max_length=25)),
                ('text', models.TextField(max_length=200)),
                ('photo', models.ImageField(upload_to=main_page.models.Chef.get_file_name)),
                ('twitter_link', models.URLField(blank=True)),
                ('facebook_link', models.URLField(blank=True)),
                ('instagram_link', models.URLField(blank=True)),
                ('linkedin_link', models.URLField(blank=True)),
                ('position', models.SmallIntegerField(unique=True)),
                ('is_visible', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ('position',),
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=25)),
                ('price', models.DecimalField(decimal_places=2, max_digits=8)),
                ('text', models.TextField(max_length=200)),
                ('photo', models.ImageField(upload_to=main_page.models.Event.get_file_name)),
                ('position', models.SmallIntegerField(unique=True)),
                ('is_visible', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ('position',),
            },
        ),
        migrations.CreateModel(
            name='Gallery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=25)),
                ('photo', models.ImageField(upload_to=main_page.models.Gallery.get_file_name)),
                ('position', models.SmallIntegerField(unique=True)),
                ('is_visible', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ('position',),
            },
        ),
        migrations.CreateModel(
            name='StatsCounter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=50, unique=True)),
                ('number', models.PositiveSmallIntegerField()),
                ('position', models.SmallIntegerField(unique=True)),
                ('is_visible', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ('position',),
            },
        ),
        migrations.CreateModel(
            name='Testimonials',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(max_length=200)),
                ('name', models.CharField(max_length=25)),
                ('occupation', models.CharField(max_length=25)),
                ('stars_amount', models.PositiveSmallIntegerField(validators=[django.core.validators.RegexValidator(message='1 to 5 stars only', regex='^[1-5]$')])),
                ('photo', models.ImageField(upload_to=main_page.models.Testimonials.get_file_name)),
                ('position', models.SmallIntegerField(unique=True)),
                ('is_visible', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ('position',),
            },
        ),
        migrations.CreateModel(
            name='UserContact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('email', models.CharField(max_length=50, validators=[django.core.validators.RegexValidator(message='Email could include "0-9,a-z,A-Z,_,-,." only', regex='^[0-9a-zA-z]+([-\\.]?[0-9a-zA-z_])*@[0-9a-zA-z]+(\\.?[0-9a-zA-z])*$')])),
                ('subject', models.CharField(max_length=50)),
                ('message', models.TextField(max_length=250)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('is_processed', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ('-date', '-is_processed'),
            },
        ),
        migrations.CreateModel(
            name='UserReservation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('email', models.CharField(max_length=50, validators=[django.core.validators.RegexValidator(message='Email could include "0-9,a-z,A-Z,_,-,." only', regex='^[0-9a-zA-z]+([-\\.]?[0-9a-zA-z_])*@[0-9a-zA-z]+(\\.?[0-9a-zA-z])*$')])),
                ('phone', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator(message='Phone in format xxx xxx xxxx', regex='^(\\d{3}[- ]?){2}\\d{4}$')])),
                ('date', models.DateField()),
                ('time', models.TimeField()),
                ('number_people', models.PositiveSmallIntegerField()),
                ('message', models.TextField(blank=True, max_length=250)),
                ('is_processed', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ('-date', '-time', '-is_processed'),
            },
        ),
        migrations.CreateModel(
            name='WhyUs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('header', models.TextField(max_length=400)),
                ('first_fact_header', models.CharField(max_length=50)),
                ('first_fact_text', models.TextField(max_length=200)),
                ('second_fact_header', models.CharField(max_length=50)),
                ('second_fact_text', models.TextField(max_length=200)),
                ('third_fact_header', models.CharField(max_length=50)),
                ('third_fact_text', models.TextField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Dish',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(max_length=200)),
                ('name', models.CharField(db_index=True, max_length=50, unique=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=8)),
                ('description', models.TextField(blank=True, max_length=500)),
                ('ingredients', models.TextField(max_length=200)),
                ('is_visible', models.BooleanField(default=True)),
                ('position', models.SmallIntegerField()),
                ('photo', models.ImageField(upload_to=main_page.models.Dish.get_file_name)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_page.category')),
            ],
            options={
                'ordering': ('position', 'price'),
                'index_together': {('id', 'slug')},
            },
        ),
    ]
